pre
ㄴa ↑
ㄴ혼용->크기상이->깨짐.

pre-courier
ㅣ↑기호
ㄴa ↑
ㄴ혼용->크기동일->정합.
ㅣ▶기호
ㄴa ▶
ㄴ▶->크기가좀더큼
ㄴ->비정렬.!!!


+
파훼법
ㄴ찾은듯.
ㄴ좌측
ㄴ키보드라인
ㄴ한글->영문대체
ㄴ▶ -> " +"로대체.!!!
ㄴ싹다이걸로ㄱㄱ.!!!
ㄴ그러면
ㄴpre싹
ㄴ그리고
ㄴ정렬로도싹.!!!
ㄴ더하여
ㄴ당해경우
ㄴa " " → 
ㄴ+
ㄴ다같기에->이정도로싹다처리가능.!!!
ㄴㄱㄱ.!!!
결론
ㄴ좌측->영문+▶비활용+한글비활용
ㄴ우측->한글




=============
+
아니네...
ㄴ그냥
ㄴ애당초
ㄴmonospace가 디폴트로잡혀있음.
ㄴ굳이
ㄴcourier
ㄴ할이유가없음.
ㄴ그냥폰트만이쁘게해주는것.
ㄴ결국
ㄴ폰트살리면서
ㄴ규격살리려면 당해활용.
ㄴ그아닌경우는 패스
ㄴ그렇기에
ㄴ기본->오히려이게더최적.
ㄴ튜닝의끝순정...
ㄴ이렇게되나;;
ㄴ고인물화되가는게
ㄴ이런느낌인듯.
ㄴㄱㄱ.
대응법
ㄴpre-courier
ㄴ이정도로만잡고
ㄴ필하믄
ㄴ넣는식으로ㄱㄱ.
더욱이
ㄴclass형으로ㄱㄱ.!!!
ㄴ이제는굳이임.!!!
ㄴ필수->선택
ㄴtag형->class형

================
+
아니네...;;
→
←
ㄴ얘와규격이있네.
ㄴcourier의장점.!!!

필하긴하다.
ㄴ확실히
ㄴ → ←
ㄴ얘들쓸거면활용ㄱㄱ.!!!
그아닌경우는
ㄴ걍기본ㄱㄱ.!!!

현행최적
ㄴ영문+숫자     ▶pre
ㄴ영문+숫자+기호▶pre-courier
